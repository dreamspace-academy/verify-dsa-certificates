{"version":3,"file":"static/js/42.ec3e2b7e.chunk.js","mappings":"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","sources":["components/HomeAppBar.js","hooks/useGoogleSheetData.js","../node_modules/@mui/icons-material/esm/VerifiedUser.js","pages/ProgrammePage.js","utils/fileUrl.js"],"sourcesContent":["import * as React from 'react';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Container from '@mui/material/Container';\r\nimport Box from '@mui/material/Box';\r\n\r\nfunction HomeAppBar() {\r\n  return (\r\n    <AppBar position=\"static\" sx={{ backgroundColor: 'white', color: 'black' }}>\r\n      <Container maxWidth=\"xl\">\r\n        <Toolbar disableGutters>\r\n          <Box\r\n            component=\"img\"\r\n            src=\"/logo-dsa.png\"\r\n            alt=\"Logo\"\r\n            sx={{ display: 'flex', height: 50, mr: 1 }}\r\n          />\r\n        </Toolbar>\r\n      </Container>\r\n    </AppBar>\r\n  );\r\n}\r\n\r\nexport default HomeAppBar;\r\n","import { useState, useEffect } from 'react';\r\nimport Papa from 'papaparse';\r\n\r\nconst useGoogleSheetData = (csvUrl) => {\r\n  const [sheetData, setsheetData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    Papa.parse(csvUrl, {\r\n      download: true,\r\n      header: true,\r\n      complete: (result) => {\r\n        setsheetData(result.data);\r\n        setLoading(false);\r\n      },\r\n    });\r\n  }, [csvUrl]);\r\n\r\n  return { sheetData, loading };\r\n};\r\n\r\nexport default useGoogleSheetData;\r\n","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 1 3 5v6c0 5.55 3.84 10.74 9 12 5.16-1.26 9-6.45 9-12V5zm-2 16-4-4 1.41-1.41L10 14.17l6.59-6.59L18 9z\"\n}), 'VerifiedUser');","import React, { useState } from 'react';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  Container,\r\n  Snackbar,\r\n  TextField,\r\n  Typography,\r\n} from '@mui/material';\r\nimport { VerifiedUser } from '@mui/icons-material';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport HomeAppBar from '../components/HomeAppBar';\r\nimport useGoogleSheetData from '../hooks/useGoogleSheetData';\r\nimport { csvUrl } from '../utils/fileUrl';\r\nimport Loading from '../components/Loading';\r\n\r\nexport default function ProgrammePage() {\r\n  const { id } = useParams();\r\n  const { sheetData, loading } = useGoogleSheetData(csvUrl);\r\n  const [openSnackbar, setOpenSnackbar] = useState(false);\r\n  const [certificateId, setCertificateId] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const handleVerify = async () => {\r\n    if (!certificateId.trim()) {\r\n      // Show Snackbar if certificateId is empty\r\n      setOpenSnackbar(true);\r\n      return;\r\n    }\r\n    const certificateUrl = `/certificate/${id}/${certificateId}`;\r\n    navigate(certificateUrl);\r\n  };\r\n\r\n  const handleCloseSnackbar = () => {\r\n    setOpenSnackbar(false);\r\n  };\r\n\r\n  // If loading, show loading component\r\n  if (loading) {\r\n    return <Loading />;\r\n  }\r\n\r\n  // Find the selected program based on the id\r\n  const program = sheetData.find((item) => item.id === id);\r\n\r\n  // If no program is found, show an error message\r\n  if (!program) {\r\n    return (\r\n      <Container maxWidth=\"md\">\r\n        <Typography variant=\"h5\" color=\"error\" mt={4}>\r\n          Program not found!\r\n        </Typography>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <HomeAppBar />\r\n\r\n      <Container maxWidth=\"md\">\r\n        <Box my={4}>\r\n          <Card>\r\n            <CardContent>\r\n              <Box display=\"flex\" alignItems=\"center\" mb={2}>\r\n                <Box\r\n                  component=\"img\"\r\n                  src={program.avatar}\r\n                  alt={`${program.initiative} Logo`}\r\n                  sx={{ width: 50, height: 50, borderRadius: '50%', mr: 2 }}\r\n                />\r\n                <Typography variant=\"h5\" component=\"h1\">\r\n                  {program.initiative}\r\n                </Typography>\r\n              </Box>\r\n              <Typography variant=\"h6\" component=\"h2\" gutterBottom>\r\n                {program.programmeName}\r\n              </Typography>\r\n              <Typography variant=\"body1\" paragraph>\r\n                {program.programmeDescription}\r\n              </Typography>\r\n              <Box my={4}>\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                  Verify Your Certificate\r\n                </Typography>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Enter Certificate ID\"\r\n                  variant=\"outlined\"\r\n                  value={certificateId}\r\n                  onChange={(e) => setCertificateId(e.target.value)}\r\n                  sx={{ mb: 2 }}\r\n                />\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  startIcon={<VerifiedUser />}\r\n                  onClick={handleVerify}\r\n                >\r\n                  Verify Certificate\r\n                </Button>\r\n              </Box>\r\n            </CardContent>\r\n          </Card>\r\n        </Box>\r\n      </Container>\r\n      <Snackbar\r\n        open={openSnackbar}\r\n        autoHideDuration={3000}\r\n        onClose={handleCloseSnackbar}\r\n        message=\"Please enter a certificate ID\"\r\n      />\r\n    </>\r\n  );\r\n}\r\n","export const csvUrl =\r\n  'https://docs.google.com/spreadsheets/d/e/2PACX-1vQMaE2Gf0PqYPyKfZMtBOGbGbpHD4lhT2LWqKDd_A832AQcB6mdTO44EUeMWG4RNVE8FUAi35FOuCB1/pub?gid=0&single=true&output=csv';\r\n"],"names":["_jsx","AppBar","position","sx","backgroundColor","color","children","Container","maxWidth","Toolbar","disableGutters","Box","component","src","alt","display","height","mr","csvUrl","sheetData","setsheetData","useState","loading","setLoading","useEffect","Papa","download","header","complete","result","data","createSvgIcon","d","ProgrammePage","id","useParams","useGoogleSheetData","openSnackbar","setOpenSnackbar","certificateId","setCertificateId","navigate","useNavigate","Loading","program","find","item","_jsxs","_Fragment","HomeAppBar","my","Card","CardContent","alignItems","mb","avatar","initiative","width","borderRadius","Typography","variant","gutterBottom","programmeName","paragraph","programmeDescription","TextField","fullWidth","label","value","onChange","e","target","Button","startIcon","VerifiedUser","onClick","async","trim","Snackbar","open","autoHideDuration","onClose","handleCloseSnackbar","message","mt"],"sourceRoot":""}